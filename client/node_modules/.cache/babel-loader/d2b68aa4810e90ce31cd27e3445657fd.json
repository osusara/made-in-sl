{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from './ExpansionPanelContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar ExpansionPanel = React.forwardRef(function ExpansionPanel(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useRef = React.useRef(expandedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultExpanded),\n      expandedState = _React$useState[0],\n      setExpandedState = _React$useState[1];\n\n  var expanded = isControlled ? expandedProp : expandedState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (expandedProp != null)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled ExpansionPanel to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled ExpansionPanel ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [expandedProp, isControlled]);\n  }\n\n  var handleChange = React.useCallback(function (event) {\n    if (!isControlled) {\n      setExpandedState(!expanded);\n    }\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, isControlled, onChange]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), React.createElement(ExpansionPanelContext.Provider, {\n    value: contextValue\n  }, summary), React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanel.propTypes = {\n  /**\n   * The content of the expansion panel.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: the ExpansionPanel doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (!React.isValidElement(summary)) {\n      return new Error('Material-UI: expected the first child of ExpansionPanel to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the panel by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the panel will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the panel, otherwise collapse it.\n   * Setting this prop enables control over the panel.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the panel.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanel'\n})(ExpansionPanel);","map":{"version":3,"sources":["D:/Osusara/Documents/Github Projects/made-in-sl/client/node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanel.js"],"names":["_extends","_toArray","_objectWithoutProperties","React","isFragment","PropTypes","clsx","chainPropTypes","Collapse","Paper","withStyles","ExpansionPanelContext","styles","theme","transition","duration","transitions","shortest","root","position","create","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","margin","marginTop","marginBottom","action","disabledBackground","rounded","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","expanded","disabled","ExpansionPanel","forwardRef","props","ref","childrenProp","children","classes","className","_props$defaultExpande","defaultExpanded","_props$disabled","expandedProp","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","TransitionProps","other","_React$useRef","useRef","isControlled","current","_React$useState","useState","expandedState","setExpandedState","process","env","NODE_ENV","useEffect","console","error","concat","join","handleChange","useCallback","event","_React$Children$toArr","Children","toArray","_React$Children$toArr2","summary","slice","contextValue","useMemo","toggle","createElement","Provider","value","in","timeout","id","role","propTypes","node","isRequired","Error","isValidElement","object","string","bool","func","elementType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from './ExpansionPanelContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar ExpansionPanel = React.forwardRef(function ExpansionPanel(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useRef = React.useRef(expandedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultExpanded),\n      expandedState = _React$useState[0],\n      setExpandedState = _React$useState[1];\n\n  var expanded = isControlled ? expandedProp : expandedState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (expandedProp != null)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled ExpansionPanel to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled ExpansionPanel ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [expandedProp, isControlled]);\n  }\n\n  var handleChange = React.useCallback(function (event) {\n    if (!isControlled) {\n      setExpandedState(!expanded);\n    }\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, isControlled, onChange]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), React.createElement(ExpansionPanelContext.Provider, {\n    value: contextValue\n  }, summary), React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanel.propTypes = {\n  /**\n   * The content of the expansion panel.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: the ExpansionPanel doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (!React.isValidElement(summary)) {\n      return new Error('Material-UI: expected the first child of ExpansionPanel to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the panel by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the panel will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the panel, otherwise collapse it.\n   * Setting this prop enables control over the panel.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the panel.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanel'\n})(ExpansionPanel);"]},"metadata":{},"sourceType":"module"}